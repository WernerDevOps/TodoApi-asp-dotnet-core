name: .NET CI/CD

on:
  push:
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: TodoAppGitHubActionsPOC
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '5.0.x'

jobs:
  build:
    env:
      FRAMEWORK: ${{secrets.FRAMEWORK}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: WernerDevOps/devops-actions/${{env.FRAMEWORK}}
        token: ${{ secrets.DEV_BOT_PAT }}
        path: .devops
        ref: create-workflow-template
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: echo framework
      run: echo ${{env.FRAMEWORK}}
    - uses: "./.devops/build"
    - uses: "./.devops/test"
    - name: Create Artifacts
      run: dotnet publish --configuration release --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish
    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: publish
    - name: ZIP Assets
      run: |
        zip -r build.zip ./publish
        echo 'zip up coverage placeholder'
    - name: Create a Release
      if: github.event_name == 'pull_request' && github.ref == 'refs/heads/master'
      run: echo 'release placeholder'
  deploy-to-staging:
    if: github.event_name == 'pull_request'
    environment: Staging
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build
        path: publish
    - name: Deploy to Staging
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish
  deploy-to-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: Production
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build
        path: publish
    - name: Deploy to Production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}Prod
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PROD }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish
    - name: Open Issue
      if: failure() && github.event_name == 'pull_request'
      run: echo 'open issue if there are any failures | placeholder'
